from pizza import Pizza
import unittest
from pizza import order
from pizza import menu


class TestTF(unittest.TestCase):
    def test_1(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–≤–æ–¥ –æ–±—ä–µ–∫—Ç–∞"""
        actual = Pizza('Pepperoni', 'L').__str__()
        expected = 'Pepperoni üçï (L)'
        self.assertEqual(actual, expected)

    def test_2(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–≤–æ–¥ –æ–±—ä–µ–∫—Ç–∞"""
        actual = Pizza('Margherita', 'XL').__str__()
        expected = 'Margherita üßÄ (XL)'
        self.assertEqual(actual, expected)

    def test_3(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–≤–æ–¥ —Ä–µ—Ü–µ–ø—Ç–∞"""
        actual = Pizza('Margherita', 'XL').dict(test=True)
        expected = {'Margherita üßÄ': 'tomato sauce, mozzarella, tomatoes'}
        self.assertEqual(actual, expected)

    def test_4(self):
        """–¢–µ—Å—Ç –Ω–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤"""
        self.assertTrue(Pizza('Hawaiian', 'XL') == Pizza('Hawaiian', 'XL'))

    def test_5(self):
        """–¢–µ—Å—Ç –Ω–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏"""
        self.assertFalse(Pizza('Hawaiian', 'L') == Pizza('Hawaiian', 'XL'))

    def test_6(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–≤–æ–¥ –º–µ–Ω—é"""
        actual = menu(test=True)
        expected = '- Margherita üßÄ: tomato sauce, mozzarella, tomatoes - Pepperoni üçï: tomato sauce, mozzarella, ' \
                   'pepperoni - Hawaiian üçç: tomato sauce, mozzarella, chicken, pineapples '
        self.assertEqual(actual, expected)

    def test_7(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–≤–æ–¥ –∑–∞–∫–∞–∑–∞"""
        actual = order('Pepperoni', 'XL', delivery_flg=True, test=True)
        expected = 'Pepperoni üçï (XL): üë®üèª‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –∑–∞ 15 –º–∏–Ω—É—Ç Pepperoni üçï (XL): üõµ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∑–∞ 10 –º–∏–Ω—É—Ç'
        self.assertEqual(actual, expected)

    def test_exception_1(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–±—Ä–æ—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å–≤–∏–∏ —Ä–∞–∑–º–µ—Ä–∞"""
        with self.assertRaises(Exception):
            Pizza('Margherita')

    def test_exception_2(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–±—Ä–æ—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è"""
        with self.assertRaises(Exception):
            Pizza(5, 'L')

    def test_exception_3(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–±—Ä–æ—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å–≤—É—é—â–µ–º –Ω–∞–∑–≤–∞–Ω–∏–∏"""
        with self.assertRaises(Exception):
            Pizza('Chicken barbeque', 'L')

    def test_exception_4(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–±—Ä–æ—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–º —Ä–∞–∑–º–µ—Ä–µ"""
        with self.assertRaises(Exception):
            Pizza('Hawaiian', 'M')

    def test_exception_5(self):
        """–¢–µ—Å—Ç –Ω–∞ –≤—ã–±—Ä–æ—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Ñ–ª–∞–≥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏"""
        with self.assertRaises(Exception):
            order('Pepperoni', 'XL', delivery_flg='1')


if __name__ == '__main__':
    unittest.main()